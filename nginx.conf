events {
    worker_connections 1024;
    # multi_accept on;
}

http {
    # Load balancer
    upstream load_balancer {
        #least_conn;
        server 52.56.247.113 max_fails=3 fail_timeout=30s;
        server 13.42.102.8 max_fails=3 fail_timeout=30s;

        # Backup servers (used when all active are down)
        #server peteroyelegbin.com.ng backup;
    }

    # Different backend services (microservices)
    upstream apache_server {
        server 52.56.247.113;
    }

    upstream nginx_server {
        server 13.42.102.8;
    }

    server {
        listen 80;
        server_name devops.peteroyelegbin.com.ng www.devops.peteroyelegbin.com.ng;

        # Load Balancer
        location / {
            proxy_pass http://load_balancer;

            # Let's Encrypt verification (will be added automatically)
            location /.well-known/acme-challenge/ {
                root /var/www/html;
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }

        # Service 1 - /apache/*
        location /apache/ {
            proxy_pass http://apache_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Service 2 - /nginx/*
        location /nginx2/ {
            proxy_pass http://nginx_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Security headers
            proxy_hide_header X-Powered-By;
            add_header X-Proxy-Server nginx;
    
            # CORS handling
            add_header Access-Control-Allow-Origin *;
        }
    }
}